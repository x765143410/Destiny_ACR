name: Release on PR Merge

on:
  pull_request:
    types: [closed]
  repository_dispatch:
    types: [trigger-release]
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force a release build'
        required: false
        default: 'true'
      pr_number:
        description: 'PR number to comment on (e.g., #4 or 4)'
        required: false
        default: ''

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
      pr_number: ${{ steps.check.outputs.pr_number }}
      pr_title: ${{ steps.check.outputs.pr_title }}
      pr_author: ${{ steps.check.outputs.pr_author }}
    steps:
      - name: Check trigger conditions
        id: check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Event name:', context.eventName);
            console.log('Event payload:', JSON.stringify(context.payload, null, 2));
            
            let shouldRelease = false;
            let prNumber = '';
            let prTitle = '';
            let prAuthor = '';
            
            // Repository dispatch event (from auto-merge workflow)
            if (context.eventName === 'repository_dispatch') {
              shouldRelease = true;
              if (context.payload.client_payload) {
                prNumber = context.payload.client_payload.pr_number || '';
                prTitle = context.payload.client_payload.pr_title || '';
                prAuthor = context.payload.client_payload.pr_author || '';
              }
              console.log('Repository dispatch trigger - from auto-merge workflow');
            }
            // Manual trigger
            else if (context.eventName === 'workflow_dispatch') {
              shouldRelease = '${{ inputs.force_release }}' === 'true';
              
              // Extract PR number from manual input
              const manualPrInput = '${{ inputs.pr_number }}';
              if (manualPrInput) {
                // Remove # if present and extract number
                prNumber = manualPrInput.replace('#', '').trim();
                if (prNumber) {
                  // Fetch PR details
                  try {
                    const { data: pr } = await github.rest.pulls.get({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      pull_number: parseInt(prNumber)
                    });
                    prTitle = pr.title;
                    prAuthor = pr.user.login;
                    console.log(`Manual trigger with PR #${prNumber}: ${prTitle}`);
                  } catch (error) {
                    console.log(`Could not fetch PR #${prNumber} details:`, error.message);
                    // Continue without PR details
                  }
                }
              }
              console.log('Manual trigger, force_release:', shouldRelease);
            }
            // PR closed event
            else if (context.eventName === 'pull_request' && context.payload.pull_request) {
              const pr = context.payload.pull_request;
              shouldRelease = pr.merged;  // Trigger for any merged PR
              prNumber = pr.number;
              prTitle = pr.title;
              prAuthor = pr.user.login;
              console.log('PR event - merged:', pr.merged);
            }
            
            core.setOutput('should_release', shouldRelease.toString());
            core.setOutput('pr_number', prNumber.toString());
            core.setOutput('pr_title', prTitle);
            core.setOutput('pr_author', prAuthor);
            
            console.log('Decision - should_release:', shouldRelease);
            
  release:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_release == 'true'
    uses: aeassist-acr/workflows_center/.github/workflows/release-on-merge.yml@master
    with:
      force_release: true
      pr_number: ${{ needs.check-trigger.outputs.pr_number }}
      pr_title: ${{ needs.check-trigger.outputs.pr_title }}
      pr_author: ${{ needs.check-trigger.outputs.pr_author }}
    secrets: inherit